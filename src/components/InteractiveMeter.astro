---
import CircularProgressbar from './CircularProgressbar.astro'
---

<h4
  >Are you recruiting? <br class='mobile' />Calculate my happiness index <br
    class='mobile'
  />before contacting me</h4
>
<section aria-label='interactive meter'>
  <CircularProgressbar />
  <form id='interactive'>
    <label
      ><input type='checkbox' />
      <span
        data-tool-tip='We are starting up something new. No legacy to clean up.'
        >Yes, it's a greenfield project.</span
      ></label
    >
    <label
      ><input type='checkbox' />
      <span
        data-tool-tip="At least it's not huge with different trains and painful syncs before releasing."
        >Yes, it's 1-2 team sized project.</span
      ></label
    >
    <label
      ><input type='checkbox' />
      <span data-tool-tip='And bonus points your thinking of diversifying it.'
        >Yes, it's a team of skilled and experienced coworkers.</span
      ></label
    >
    <label
      ><input type='checkbox' checked /> Yes, we know your skills, and those are
      exactly what we're looking for.</label
    >
    <label
      ><input type='checkbox' />
      <span data-tool-tip='Just checking :)'>Yes, we have a clear goal.</span
      ></label
    >
    <label><input type='checkbox' /> Salary? Name a number :)</label>
  </form>
</section>
<style lang='scss'>
  section {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 2rem;
    @media screen and (min-width: 768px) {
      flex-direction: row;
    }
  }
  form {
    color: var(--color-dark);
    display: flex;
    flex-flow: column nowrap;
    padding-left: 1rem;
  }
</style>
<script is:inline>
  const clamp = (number, min, max) => Math.max(min, Math.min(number, max))
  const totalLength = 337
  let percent = 0
  const form = document.getElementById('interactive')
  const circle = document.querySelector('.percent')
  const checkboxes = [...form.querySelectorAll('input[type="checkbox"]')]
  circle.style.strokeDashoffset =
    totalLength - totalLength * (1 / checkboxes.length)
  const step = Math.ceil(100 / checkboxes.length)
  percent = step
  const clickHandler = (e) => {
    const el = e.target
    el.checked ? (percent += step) : (percent -= step)
    circle.style.strokeDashoffset = clamp(
      totalLength - percent * 0.01 * totalLength,
      0,
      totalLength
    )
    // form.parentElement.style.setProperty(
    //   '--val',
    //   clamp(percent, 0, 100) * (totalLength / 100)
    // )
    // console.log('percent', percent)
    if (percent >= 100) {
      displayToaster('We should get in touch ! :)', (type = 'success'))
    } else if (percent > 100 - step) {
      displayToaster('So close', (type = 'success'))
    }
  }
  checkboxes.map((el) => el.addEventListener('click', clickHandler))

  function displayToaster(message, type = 'success') {
    document.body.dispatchEvent(
      new CustomEvent('TOASTER', {
        detail: [message, 5, type],
      })
    )
  }
</script>
