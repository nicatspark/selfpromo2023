---
import HeaderLink from './HeaderLink.astro'
// import { SITE_TITLE } from '../config'
import UiSwitch from './Uiswitch.astro'
import CheckScrollDirection from './CheckScrollDirection'
import Icon from './icon.astro'
---

<header>
  <div class='logo'>
    <Icon icon='logo' />
    <h1><a href='/'>UX/FULLSTACK DEV</a></h1></div
  >
  <nav>
    <HeaderLink href='/'>Home</HeaderLink>
    <HeaderLink href='/blog'>Articles</HeaderLink>
    <HeaderLink href='/about'>About</HeaderLink>
    <UiSwitch className='theme-toggle' />
    <CheckScrollDirection client:load />
  </nav>
  <script>
    const header = document.querySelector('header')
    const scrollEventHandler = (e: any) => {
      if (!header) return
      if (e.detail === 'UP') {
        header.classList.remove('slideout')
      } else {
        header.classList.add('slideout')
      }
    }
    const mouseEventHandler = (e: MouseEvent) => {
      if (!header) return
      const styles = getComputedStyle(document.documentElement)
      const headerHeight = parseInt(styles.getPropertyValue('--header-height'))
      if (e.clientY < headerHeight && header.classList.contains('slideout')) {
        header.classList.remove('slideout')
      }
    }
    document.addEventListener('NEWSCROLLDIRECTION', scrollEventHandler)
    document.addEventListener('mousemove', mouseEventHandler)

    /* handle dark mode */
    let btn = document.querySelector('.theme-toggle')
    const prefersDarkScheme = window.matchMedia('(prefers-color-scheme: dark)')
    const root = document.documentElement

    const currentTheme =
      sessionStorage.getItem('theme') ||
      (prefersDarkScheme.matches ? 'dark' : 'light')
    if (currentTheme === 'dark') {
      root.classList.add('dark-theme')
      root.classList.remove('light-theme')
    } else if (currentTheme === 'light') {
      root.classList.add('light-theme')
      root.classList.remove('dark-theme')
    }
    if (currentTheme === 'dark') {
      const checkbox = btn?.querySelector('input') as HTMLInputElement
      if (checkbox) checkbox.checked = true
    }

    if (btn)
      btn.addEventListener('mousedown', function () {
        root.classList.toggle('light-theme')
        root.classList.toggle('dark-theme')
        if (prefersDarkScheme.matches) {
          var theme = root.classList.contains('light-theme') ? 'light' : 'dark'
        } else {
          var theme = root.classList.contains('dark-theme') ? 'dark' : 'light'
        }
        sessionStorage.setItem('theme', theme)
      })
  </script>
</header>

<style lang='scss'>
  header {
    --logo-color: var(--color-dark);
    --logo-shadow: 1px 1px 0 white;
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 80px;
    z-index: 10;
    background-color: var(--bg-header); /* var(--bg-color); */
    display: flex;
    justify-content: space-between;
    flex-direction: row;
    flex-wrap: nowrap;
    align-items: center;
    padding: 0rem 2rem;
    border-bottom: 1px solid hsl(0 0% 100% / 0.2);
    backdrop-filter: blur(5px);
    transition: top 300ms ease-out;

    &.slideout {
      top: calc(var(--header-height) * -1);
      transition: top 800ms ease-in 500ms;
    }

    a:link,
    a:visited,
    a:hover,
    a:active {
      background-color: unset;
      color: var(--color-dark);
    }
    nav {
      display: flex;
      gap: 2rem;
      font-family: var(--sans-serif);
      text-transform: uppercase;
      font-size: 0.9rem;
      letter-spacing: 0.1em;
    }
    .logo {
      display: flex;
      align-items: center;
      h1 {
        white-space: nowrap;
        color: var(--logo-color);
        font-size: 2rem;
        cursor: pointer;
        text-shadow: var(--logo-shadow);
        a {
          color: inherit;
          text-decoration: none;
        }
      }
    }

    &:after {
      content: '';
      position: absolute;
      left: 0;
      bottom: 1px;
      border-bottom: 1px solid hsla(0deg, 0%, 0%, 0.2);
      width: 100%;
    }
  }

  html.dark-theme header {
    --logo-color: hsl(28deg 70% 37%);
    --logo-shadow: 1px 1px 5px hsl(0deg 0% 30%);
  }
</style>
